{"version":3,"sources":["reducers/authReducer.js","context/AuthContextProvider.js","components/styles/notecard.js","components/NoteCard.js","components/Notes.js","components/NoteDetails.js","components/styles/auth.js","components/Create.js","components/styles/profile.js","components/Profile.js","components/styles/layout.js","components/ElevateAppbar.js","components/Navbar.js","components/Layout.js","components/auth/Login.js","components/auth/VerifyEmail.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ResetPassword.js","App.js","index.js"],"names":["authReducer","state","action","type","user","payload","notes","isDarkMode","AuthContext","createContext","prevState","JSON","parse","localStorage","getItem","initialState","AuthContextProvider","children","useReducer","dispatch","console","log","handleDelete","id","a","axios","delete","newNotes","filter","note","_id","useEffect","document","cookie","includes","setItem","stringify","removeItem","Provider","value","makeStyles","avatar","backgroundColor","category","yellow","green","pink","blue","title","fontSize","fontWeight","titleDark","color","media","height","NoteCard","useContext","classes","useStyles","image","Card","elevation","style","background","to","CardMedia","className","component","src","CardContent","Typography","variant","details","CardActions","Notes","useState","setNotes","isLoading","setIsLoading","isError","setIsError","source","CancelToken","config","header","get","cancelToken","token","data","isCancel","fetchData","cancel","Container","CircularProgress","size","thickness","Grid","container","spacing","map","item","xs","sm","md","lg","NoteDetails","match","history","params","setNote","loading","setLoading","bat","setBat","window","navigator","vibrate","batteryIsCharging","getBattery","then","battery","addEventListener","charging","fetchNote","maxWidth","IconButton","onClick","push","theme","field","marginTop","marginBottom","display","root","borderColor","btnText","btn","loginH","toolbar","mixins","con","position","top","right","bottom","placeItems","textLab","Create","setTitle","setDetails","setImage","imgName","setImgName","titleError","setTitleError","detailsError","setDetailsError","handleFile","e","isFileInput","target","files","name","Resizer","imageFileResizer","uri","err","handleSubmit","preventDefault","post","response","gutterBottom","noValidate","autoComplete","onSubmit","width","TextField","onChange","label","fullWidth","required","error","InputLabelProps","InputProps","multiline","rows","htmlFor","placeSelf","accept","Button","border","marginLeft","av","avCon","liWidth","breakpoints","up","Profile","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","setData","setError","anchorImg","setAnchorImg","anchorUsername","setAnchorUsername","anchorPassword","setAnchorPassword","imgOpen","Boolean","usernameOpen","passwordOpen","param","Error","setTimeout","patch","handleDP","currentTarget","handleClose","Avatar","toUpperCase","email","List","ListItem","ListItemIcon","ListItemText","primary","Switch","checked","button","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","drawerWidth","page","padding","drawer","flexShrink","drawerPaper","drawT","borderRight","divider","active","darkActive","flexGrow","appbar","menuButton","marginRight","date","only","login","yo","down","ElevationScroll","props","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","Navbar","mobileOpen","setMobileOpen","handleDrawerToggle","useHistory","location","useLocation","mql","matchMedia","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","handleMenu","matches","handleLogout","nav","Divider","pathname","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","keepMounted","xsDown","Layout","AppBar","Toolbar","edge","noWrap","Login","setEmail","VerifyEmail","Register","setUser","verifyToken","ForgotPassword","success","setSuccess","ResetPassword","length","resetToken","createMuiTheme","palette","main","secondary","tet","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","App","ThemeProvider","exact","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1b9687d.chunk.js","sourcesContent":["const authReducer = (state, action) => {\n  if (action.type === \"SET_USER\") {\n    return { ...state, user: action.payload };\n  } else if (action.type === \"TOGGLE_SWITCH\") {\n    if (state.isDarkMode === false) {\n      return { ...state, isDarkMode: true };\n    } else if (state.isDarkMode === true) {\n      return { ...state, isDarkMode: false };\n    }\n  } else if (action.type === \"SET_NOTES\") {\n    return { ...state, notes: action.payload };\n  } else {\n    return state;\n  }\n};\n\nexport default authReducer;\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport authReducer from \"../reducers/authReducer\";\nimport axios from \"axios\";\n\nexport const AuthContext = createContext();\n\nconst prevState = JSON.parse(localStorage.getItem(\"state\"));\nconst initialState = prevState\n  ? { user: prevState.user, isDarkMode: prevState.isDarkMode }\n  : { user: null, notes: [], isDarkMode: false };\n\nconst AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  console.log(state);\n\n  const handleDelete = async (id) => {\n    await axios.delete(`/notes/${id}`);\n\n    const newNotes = state.notes.filter((note) => note._id !== id);\n    dispatch({ type: \"SET_NOTES\", payload: newNotes });\n  };\n\n  useEffect(() => {\n    if (document.cookie.includes(\"check=\")) {\n      localStorage.setItem(\"state\", JSON.stringify(state));\n    } else {\n      localStorage.removeItem(\"state\");\n    }\n  }, [state]);\n\n  return <AuthContext.Provider value={{ ...state, handleDelete, dispatch }}>{children}</AuthContext.Provider>;\n};\n\nexport default AuthContextProvider;\n","import { makeStyles } from \"@material-ui/core\";\nimport { blue, green, pink, yellow } from \"@material-ui/core/colors\";\n\nexport default makeStyles({\n  avatar: {\n    backgroundColor: (note) => {\n      if (note.category === \"work\") {\n        return yellow[700];\n      }\n      if (note.category === \"money\") {\n        return green[500];\n      }\n      if (note.category === \"todos\") {\n        return pink[500];\n      }\n      return blue[500];\n    },\n  },\n  title: {\n    fontSize: \"18px\",\n    fontWeight: \"500\",\n  },\n  titleDark: {\n    color: \"#ddd\",\n  },\n  media: {\n    height: 140,\n    // paddingTop: \"56.25%\", // 16:9\n  },\n});\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  IconButton,\n  Typography,\n  Avatar,\n  CardMedia,\n  CardActions,\n} from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport useStyles from \"./styles/notecard\";\nimport { AuthContext } from \"../context/AuthContextProvider\";\n// import dp from \"../img/mete.jpg\";\n\nconst NoteCard = ({ note, handleDelete }) => {\n  const { isDarkMode } = useContext(AuthContext);\n  const classes = useStyles(note);\n\n  console.log(note.image);\n\n  return (\n    <>\n      <Card elevation={2} style={isDarkMode ? { background: \"#333\", color: \"#fff\" } : null}>\n        <Link to={`/notes/${note._id}`}>\n          <CardMedia className={note.image ? classes.media : null} component=\"img\" src={note.image} />\n          {/* <CardHeader\n          avatar={<Avatar src={note.creator ? note.creator.image : \"\"} className={classes.avatar}></Avatar>}\n          title={note.title}\n          subheader={note.category}\n          classes={\n            !isDarkMode\n              ? { title: classes.title }\n              : { title: classes.titleDark, subheader: classes.titleDark }\n          }\n        /> */}\n          <CardContent>\n            <Typography variant=\"h6\" color=\"textSecondary\" style={isDarkMode ? { color: \"#ddd\" } : null}>\n              {note.title}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              style={isDarkMode ? { color: \"#ddd\" } : null}\n            >\n              {note.details}\n            </Typography>\n          </CardContent>\n        </Link>\n        <CardActions></CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default NoteCard;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContextProvider\";\nimport axios from \"axios\";\nimport { Container, Grid, Typography, CircularProgress } from \"@material-ui/core\";\nimport NoteCard from \"./NoteCard\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Notes() {\n  const { isDarkMode, dispatch } = useContext(AuthContext);\n  const [notes, setNotes] = useState([]);\n  // const [creators, setCreators] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const { data } = await axios.get(\"/notes\", config, { cancelToken: source.token });\n        setNotes(data.notes);\n        dispatch({ type: \"SET_NOTES\", payload: data.notes });\n        dispatch({ type: \"SET_USER\", payload: data.user });\n        setIsLoading(false);\n      } catch (error) {\n        if (!axios.isCancel(error)) {\n          setIsLoading(false);\n          setIsError(\"Some error occured\");\n        }\n      }\n    };\n    fetchData();\n\n    return () => {\n      source.cancel();\n    };\n  }, [dispatch]);\n\n  return (\n    <Container style={{ height: \"100%\" }}>\n      {isLoading ? (\n        <div className=\"loader\" style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}>\n          <CircularProgress size=\"40px\" thickness={4} color=\"secondary\" />\n        </div>\n      ) : isError ? (\n        <div style={isDarkMode ? { height: \"100vh\", color: \"#fff\" } : null}>\n          <Typography variant=\"h5\">{isError} Please refresh the page</Typography>\n        </div>\n      ) : (\n        <Grid container spacing={3}>\n          {notes.map((note) => (\n            <Grid item key={note._id} xs={12} sm={6} md={4} lg={3}>\n              <NoteCard note={note} />\n            </Grid>\n          ))}\n        </Grid>\n      )}\n    </Container>\n  );\n}\n","import { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/AuthContextProvider\";\nimport { Container, Typography, CircularProgress, IconButton } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst NoteDetails = ({ match, history }) => {\n  const { isDarkMode, handleDelete } = useContext(AuthContext);\n  const id = match.params.id;\n  const [note, setNote] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [bat, setBat] = useState(false);\n\n  useEffect(() => {\n    window.navigator.vibrate(5000);\n    let batteryIsCharging = false;\n\n    navigator.getBattery().then(function (battery) {\n      battery.addEventListener(\"chargingchange\", function () {\n        batteryIsCharging = battery.charging;\n\n        if (batteryIsCharging === true) {\n          setBat(true);\n        } else {\n          setBat(false);\n        }\n      });\n    });\n    const source = axios.CancelToken.source();\n    const fetchNote = async () => {\n      setLoading(true);\n      try {\n        const { data } = await axios.get(`/notes/${id}`, { cancelToken: source.token });\n        setNote(data);\n        setLoading(false);\n      } catch (error) {\n        if (!axios.isCancel(error)) {\n          setLoading(false);\n        }\n        console.log(error);\n      }\n    };\n    fetchNote();\n    return () => {\n      source.cancel();\n    };\n  }, [id]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      {loading && (\n        <div className=\"loader\" style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}>\n          <CircularProgress size=\"40px\" thickness={4} color=\"secondary\" />\n        </div>\n      )}\n      <Typography variant=\"h4\">{note.title}</Typography>\n      <Typography>{note.details}</Typography>\n      <IconButton\n        onClick={() => {\n          handleDelete(id);\n          history.push(\"/\");\n        }}\n      >\n        <DeleteIcon style={isDarkMode ? { color: \"#333\" } : null} />\n      </IconButton>\n      {bat && <p style={{ color: \"red\" }}>Battery is Charging</p>}\n      {!bat && <p style={{ color: \"red\" }}>Battery is not Charging</p>}\n    </Container>\n  );\n};\n\nexport default NoteDetails;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    field: {\n      marginTop: 20,\n      marginBottom: 20,\n      display: \"block\",\n    },\n    root: {\n      marginTop: 20,\n      marginBottom: 20,\n      display: \"block\",\n      backgroundColor: \"#333\",\n      \"&:hover\": {\n        backgroundColor: \"#333\",\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#ddd\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#ddd\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#ddd\",\n          color: \"#ddd\",\n        },\n      },\n    },\n    btnText: {\n      fontWeight: 600,\n    },\n    btn: {\n      marginTop: 20,\n    },\n    loginH: {\n      fontWeight: 700,\n      marginBottom: 40,\n    },\n    toolbar: theme.mixins.toolbar,\n    con: {\n      background: \"#e91e63\",\n      position: \"fixed\",\n      top: 0,\n      right: 0,\n      bottom: 0,\n      display: \"grid\",\n      placeItems: \"center\",\n    },\n    textLab: {\n      color: \"#ddd !important\",\n    },\n  };\n});\n\nexport default useStyles;\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Typography, Button, Container, TextField } from \"@material-ui/core\";\nimport Resizer from \"react-image-file-resizer\";\nimport { AuthContext } from \"../context/AuthContextProvider\";\nimport useStyles from \"./styles/auth\";\n\nexport default function Create({ history }) {\n  const { user, isDarkMode } = useContext(AuthContext);\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [imgName, setImgName] = useState(\"\");\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n\n  const handleFile = async (e) => {\n    let isFileInput = false;\n    setImgName(e.target.files[0].name);\n    if (e.target.files[0]) {\n      isFileInput = true;\n    }\n\n    if (isFileInput) {\n      try {\n        Resizer.imageFileResizer(\n          e.target.files[0],\n          300,\n          300,\n          \"PNG\",\n          100,\n          0,\n          (uri) => {\n            setImage(uri);\n          },\n          \"base64\"\n        );\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setTitleError(false);\n    setDetailsError(false);\n\n    if (!user) {\n      history.push(\"/login\");\n    }\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (title === \"\") {\n      setTitleError(true);\n    }\n    if (details === \"\") {\n      setDetailsError(true);\n    }\n\n    if (title && details) {\n      try {\n        await axios.post(\"/notes/create\", { title, details, image }, config);\n        history.push(\"/\");\n      } catch (error) {\n        console.log(error.response.data);\n      }\n    }\n\n    setTitle(\"\");\n    setDetails(\"\");\n  };\n\n  return (\n    <Container style={{ height: \"100vh\" }}>\n      <Typography variant=\"h6\" component=\"h2\" gutterBottom style={isDarkMode ? { color: \"#ddd\" } : null}>\n        Create a New Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <div style={{ width: \"100%\", display: \"grid\", placeItems: \"center\" }}>\n          <TextField\n            onChange={(e) => setTitle(e.target.value)}\n            className={isDarkMode ? classes.root : classes.field}\n            label=\"Note Title\"\n            variant=\"outlined\"\n            fullWidth\n            required\n            error={titleError}\n            InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n            InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n          />\n          <TextField\n            onChange={(e) => setDetails(e.target.value)}\n            className={isDarkMode ? classes.root : classes.field}\n            label=\"Details\"\n            variant=\"outlined\"\n            multiline\n            rows={4}\n            fullWidth\n            required\n            error={detailsError}\n            InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n            InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n          />\n          <div className=\"img-create\" style={isDarkMode ? { background: \"#333\", color: \"#ddd\" } : null}>\n            <label htmlFor=\"dp\" style={{ placeSelf: \"center\" }}>\n              <input id=\"dp\" type=\"file\" accept=\"image/*\" onChange={handleFile} style={{ display: \"none\" }} />\n              <Button\n                component=\"span\"\n                variant=\"outlined\"\n                style={isDarkMode ? { border: \" 1px solid #ddd\", color: \"#ddd\" } : null}\n              >\n                Select Image\n              </Button>\n            </label>\n            {imgName && <span style={{ fontSize: \"14px\", marginLeft: \"20px\" }}>{imgName}</span>}\n          </div>\n\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n            Submit\n          </Button>\n        </div>\n      </form>\n    </Container>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    av: {\n      width: 100,\n      height: 100,\n      marginBottom: 20,\n    },\n    root: {\n      backgroundColor: \"rgba(0,0,0,0.8)\",\n      \"&:hover\": {\n        backgroundColor: \"rgba(0,0,0,0.8)\",\n      },\n      \"& .MuiOutlinedInput-root\": {\n        \"& fieldset\": {\n          borderColor: \"#ddd\",\n        },\n        \"&:hover fieldset\": {\n          borderColor: \"#ddd\",\n        },\n        \"&.Mui-focused fieldset\": {\n          borderColor: \"#ddd\",\n          color: \"#ddd\",\n        },\n      },\n    },\n    avCon: {\n      width: \"100%\",\n      display: \"grid\",\n      placeItems: \"center\",\n    },\n    liWidth: {\n      marginTop: 20,\n      [theme.breakpoints.up(\"sm\")]: {\n        width: 400,\n        placeSelf: \"center\",\n      },\n    },\n    textLab: {\n      color: \"#ddd !important\",\n    },\n  };\n});\n\nexport default useStyles;\n","import { useContext, useState, useEffect } from \"react\";\nimport {\n  Avatar,\n  Container,\n  Typography,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Switch,\n  Popover,\n  Button,\n  TextField,\n} from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport green from \"@material-ui/core/colors/green\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { AuthContext } from \"../context/AuthContextProvider\";\nimport axios from \"axios\";\nimport Resizer from \"react-image-file-resizer\";\nimport useStyles from \"./styles/profile\";\n\nconst Profile = ({ history }) => {\n  const classes = useStyles();\n  const { user, isDarkMode, dispatch } = useContext(AuthContext);\n  const [image, setImage] = useState(\"\");\n  const [imgName, setImgName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [anchorImg, setAnchorImg] = useState(null);\n  const [anchorUsername, setAnchorUsername] = useState(null);\n  const [anchorPassword, setAnchorPassword] = useState(null);\n  const imgOpen = Boolean(anchorImg);\n  const usernameOpen = Boolean(anchorUsername);\n  const passwordOpen = Boolean(anchorPassword);\n  const source = axios.CancelToken.source();\n\n  useEffect(() => {\n    if (!user) {\n      dispatch({ type: \"SET_USER\", payload: null });\n      history.push(\"/login\");\n    }\n  });\n\n  const handleFile = async (e) => {\n    let isFileInput = false;\n    setImgName(e.target.files[0].name);\n    if (e.target.files[0]) {\n      isFileInput = true;\n    }\n\n    if (isFileInput) {\n      try {\n        Resizer.imageFileResizer(\n          e.target.files[0],\n          300,\n          300,\n          \"PNG\",\n          100,\n          0,\n          (uri) => {\n            setImage(uri);\n          },\n          \"base64\"\n        );\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const handleSubmit = async (e, param) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    try {\n      if (param === \"image\" && !image) {\n        throw Error;\n      }\n      if (param === \"password\" && password !== confirmPassword) {\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setTimeout(() => {\n          setError(\"\");\n        }, 5000);\n        return setError(\"Passwords do not match\");\n      }\n      if (param === \"username\" && !username) {\n        throw Error;\n      }\n\n      const { data } = await axios.patch(\n        `/user/${user._id}`,\n        image ? { image } : username ? { username } : { password },\n        config,\n        { cancelToken: source.token }\n      );\n      if (data) {\n        dispatch({ type: \"SET_USER\", payload: data });\n        setData(data);\n        setTimeout(() => {\n          setData(null);\n        }, 4000);\n        setImage(\"\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setTimeout(() => {\n          setAnchorUsername(null);\n          setAnchorPassword(null);\n          setAnchorImg(null);\n        }, 4000);\n      }\n    } catch (error) {\n      console.log(error.response.data.error);\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      setImage(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n    }\n  };\n\n  const handleChange = () => {\n    dispatch({ type: \"TOGGLE_SWITCH\" });\n  };\n\n  const handleDP = (e, param) => {\n    if (param === \"image\") {\n      setAnchorImg(e.currentTarget);\n    }\n    if (param === \"password\") {\n      setAnchorPassword(e.currentTarget);\n    }\n    if (param === \"username\") {\n      setAnchorUsername(e.currentTarget);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorImg(null);\n    setAnchorUsername(null);\n    setAnchorPassword(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      source.cancel();\n    };\n  });\n\n  return (\n    <Container style={isDarkMode ? { height: \"calc(100vh - 64px)\" } : null}>\n      {user && (\n        <div style={isDarkMode ? { color: \"#ddd\", display: \"grid\" } : { display: \"grid\" }}>\n          <div className={classes.avCon}>\n            <Avatar src={user.image} className={classes.av}>\n              {!user.image ? user.username[0].toUpperCase() : \"\"}\n            </Avatar>\n            <Typography variant=\"h5\">{user.email}</Typography>\n          </div>\n          <div className={classes.liWidth}>\n            <List>\n              <ListItem>\n                <ListItemIcon>\n                  {!isDarkMode ? <Brightness4Icon color=\"secondary\" /> : <WbSunnyIcon color=\"secondary\" />}\n                </ListItemIcon>\n                <ListItemText primary=\"Dark Mode\" />\n                <Switch onChange={handleChange} checked={isDarkMode} />\n              </ListItem>\n\n              <ListItem button onClick={(e) => handleDP(e, \"image\")}>\n                <ListItemIcon>\n                  <AddAPhotoIcon color=\"secondary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Add a Profile Photo\" />\n              </ListItem>\n              <Popover\n                open={imgOpen}\n                anchorEl={anchorImg}\n                onClose={handleClose}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"center\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <div\n                  className=\"pofile_form_con\"\n                  style={isDarkMode ? { background: \"#333\", color: \"#fff\" } : null}\n                >\n                  <form\n                    onSubmit={(e) => handleSubmit(e, \"image\")}\n                    style={data ? { display: \"none\" } : { display: \"grid\", width: \"100%\" }}\n                  >\n                    <label htmlFor=\"dp\" style={{ placeSelf: \"center\" }}>\n                      <input\n                        id=\"dp\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleFile}\n                        style={{ display: \"none\" }}\n                      />\n                      <Button\n                        component=\"span\"\n                        variant=\"outlined\"\n\n                        // style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}\n                      >\n                        Select Image\n                      </Button>\n                    </label>\n                    {imgName && <span style={{ fontSize: \"14px\" }}>{imgName}</span>}\n                    <Button\n                      type=\"submit\"\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      size=\"small\"\n                      style={{ marginTop: \"10px\", placeSelf: \"center\" }}\n                    >\n                      Upload\n                    </Button>\n                  </form>\n                  {data && (\n                    <>\n                      <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\n                      <br></br>\n                      <h4>Image was uploaded successfully!</h4>\n                    </>\n                  )}\n                </div>\n              </Popover>\n\n              <ListItem button onClick={(e) => handleDP(e, \"username\")}>\n                <ListItemIcon>\n                  <CreateIcon color=\"secondary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Change Username\" />\n              </ListItem>\n              <Popover\n                open={usernameOpen}\n                anchorEl={anchorUsername}\n                onClose={handleClose}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"center\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <div\n                  className=\"pofile_form_con\"\n                  style={isDarkMode ? { background: \"#333\", color: \"#fff\" } : null}\n                >\n                  <form\n                    onSubmit={(e) => handleSubmit(e, \"username\")}\n                    style={data ? { display: \"none\" } : { display: \"grid\", width: \"100%\" }}\n                  >\n                    <TextField\n                      label=\"Username\"\n                      className={isDarkMode ? classes.root : null}\n                      value={username}\n                      variant=\"outlined\"\n                      style={{ marginBottom: \"16px\" }}\n                      fullWidth\n                      onChange={(e) => setUsername(e.target.value)}\n                      size=\"small\"\n                      InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                      InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                    />\n\n                    {error && <span className=\"error-msg\">{error}</span>}\n\n                    <Button\n                      type=\"submit\"\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      size=\"small\"\n                      style={{ marginTop: \"10px\", placeSelf: \"center\" }}\n                    >\n                      change username\n                    </Button>\n                  </form>\n                  {data && (\n                    <>\n                      <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\n                      <br></br>\n                      <h4>Username was changed successfully!</h4>\n                    </>\n                  )}\n                </div>\n              </Popover>\n\n              <ListItem button onClick={(e) => handleDP(e, \"password\")}>\n                <ListItemIcon>\n                  <CreateIcon color=\"secondary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Change Password\" />\n              </ListItem>\n              <Popover\n                open={passwordOpen}\n                anchorEl={anchorPassword}\n                onClose={handleClose}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"center\",\n                }}\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"center\",\n                }}\n              >\n                <div\n                  className=\"pofile_form_con\"\n                  style={isDarkMode ? { background: \"#333\", color: \"#fff\" } : null}\n                >\n                  <form\n                    onSubmit={(e) => handleSubmit(e, \"password\")}\n                    style={data ? { display: \"none\" } : { display: \"grid\", width: \"100%\" }}\n                  >\n                    <TextField\n                      label=\"New Password\"\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                      style={{ marginBottom: \"16px\" }}\n                      fullWidth\n                      onChange={(e) => setPassword(e.target.value)}\n                      size=\"small\"\n                      InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                      className={isDarkMode ? classes.root : null}\n                      InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                    />\n                    <TextField\n                      label=\"Confirm New Password\"\n                      type=\"password\"\n                      value={confirmPassword}\n                      variant=\"outlined\"\n                      style={{ marginBottom: \"16px\" }}\n                      fullWidth\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      size=\"small\"\n                      InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                      className={isDarkMode ? classes.root : null}\n                      InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                    />\n\n                    {error && <span className=\"error-msg\">{error}</span>}\n\n                    <Button\n                      type=\"submit\"\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      size=\"small\"\n                      style={{ marginTop: \"10px\", placeSelf: \"center\" }}\n                    >\n                      Change password\n                    </Button>\n                  </form>\n                  {data && (\n                    <>\n                      <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\n                      <br></br>\n                      <h4>Password was changed successfully!</h4>\n                    </>\n                  )}\n                </div>\n              </Popover>\n            </List>\n          </div>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default Profile;\n","import { makeStyles } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nexport default makeStyles((theme) => {\n  return {\n    page: {\n      width: \"100%\",\n      height: \"100%\",\n      padding: theme.spacing(3),\n    },\n    drawer: {\n      [theme.breakpoints.up(\"sm\")]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      height: \"100%\",\n    },\n    drawT: {\n      width: drawerWidth,\n      height: \"100%\",\n      background: \"#000\",\n      color: \"#fff\",\n      borderRight: \"1px solid rgba(221, 221, 221, 0.4)\",\n    },\n    root: {\n      display: \"flex\",\n      height: \"100%\",\n    },\n    divider: {\n      background: \"rgba(221, 221, 221, 0.4)\",\n    },\n    active: {\n      background: \"#f4f4f4\",\n    },\n    darkActive: {\n      background: \"#333\",\n    },\n    title: {\n      fontWeight: 700,\n      flexGrow: 1,\n    },\n    appbar: {\n      backgroundColor: \"#fff\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"none\",\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    avatar: {\n      marginLeft: theme.spacing(2),\n      background: \"green\",\n    },\n    date: {\n      [theme.breakpoints.only(\"xs\")]: {\n        display: \"none\",\n      },\n    },\n    login: {\n      marginRight: theme.spacing(1),\n    },\n    yo: {\n      [theme.breakpoints.down(\"xs\")]: {\n        display: \"none\",\n      },\n    },\n  };\n});\n","import React from \"react\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nexport default function ElevationScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n","import { useContext } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Hidden, Divider } from \"@material-ui/core\";\nimport { AddCircleOutlineOutlined, SubjectOutlined } from \"@material-ui/icons\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport ExitToAppOutlinedIcon from \"@material-ui/icons/ExitToAppOutlined\";\nimport useStyles from \"./styles/layout\";\nimport { AuthContext } from \"../context/AuthContextProvider\";\n\nconst Navbar = (props) => {\n  const { mobileOpen, setMobileOpen, handleDrawerToggle } = props;\n  const { user, isDarkMode, dispatch } = useContext(AuthContext);\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  let mql = window.matchMedia(\"(max-width: 600px)\");\n\n  const menuItems = [\n    {\n      text: \"My Notes\",\n      icon: <SubjectOutlined color=\"secondary\" />,\n      path: \"/\",\n    },\n    {\n      text: \"Create Note\",\n      icon: <AddCircleOutlineOutlined color=\"secondary\" />,\n      path: \"/create\",\n    },\n  ];\n\n  const handleMenu = (path) => {\n    history.push(path);\n\n    if (mql.matches) {\n      setMobileOpen(!mobileOpen);\n    }\n  };\n\n  const handleLogout = async () => {\n    await axios.get(\"auth/logout\");\n    history.push(\"/login\");\n    dispatch({ type: \"SET_USER\", payload: null });\n    if (mql.matches) {\n      setMobileOpen(!mobileOpen);\n    }\n  };\n\n  const drawer = (\n    <div className={classes.nav}>\n      <div className={classes.toolbar}></div>\n      <Divider classes={isDarkMode ? { root: classes.divider } : null} />\n      <List>\n        {menuItems.map((item) => (\n          <ListItem\n            button\n            key={item.text}\n            onClick={() => handleMenu(item.path)}\n            className={\n              location.pathname === item.path && !isDarkMode\n                ? classes.active\n                : location.pathname === item.path && isDarkMode\n                ? classes.darkActive\n                : null\n            }\n          >\n            <ListItemIcon>{item.icon}</ListItemIcon>\n            <ListItemText primary={item.text} />\n          </ListItem>\n        ))}\n\n        {!user ? (\n          <>\n            <ListItem\n              button\n              onClick={() => handleMenu(\"/login\")}\n              className={\n                location.pathname === \"/login\" && !isDarkMode\n                  ? classes.active\n                  : location.pathname === \"/login\" && isDarkMode\n                  ? classes.darkActive\n                  : null\n              }\n            >\n              <ListItemIcon>\n                <LockOpenIcon color=\"secondary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"Login\" />\n            </ListItem>\n            {mql.matches && (\n              <ListItem\n                button\n                onClick={() => handleMenu(\"/verification\")}\n                className={\n                  location.pathname === \"/verification\" && !isDarkMode\n                    ? classes.active\n                    : location.pathname === \"/verification\" && isDarkMode\n                    ? classes.darkActive\n                    : null\n                }\n              >\n                <ListItemIcon>\n                  <LockOpenIcon color=\"secondary\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Register\" />\n              </ListItem>\n            )}\n          </>\n        ) : (\n          <ListItem button onClick={handleLogout}>\n            <ListItemIcon>\n              <ExitToAppOutlinedIcon color=\"secondary\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Logout\" />\n          </ListItem>\n        )}\n      </List>\n    </div>\n  );\n\n  return (\n    <>\n      <nav className={classes.drawer}>\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            variant=\"temporary\"\n            anchor=\"left\"\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: isDarkMode ? classes.drawT : classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            variant=\"permanent\"\n            open\n            classes={{ paper: isDarkMode ? classes.drawT : classes.drawerPaper }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useContext } from \"react\";\nimport { Typography, AppBar, Toolbar, IconButton, Avatar, Button } from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { format } from \"date-fns\";\nimport useStyles from \"./styles/layout\";\nimport ElevationScroll from \"./ElevateAppbar\";\nimport Navbar from \"./Navbar\";\nimport { AuthContext } from \"../context/AuthContextProvider\";\nimport { Link } from \"react-router-dom\";\n\nconst Layout = (props) => {\n  const { children } = props;\n  const { user, isDarkMode } = useContext(AuthContext);\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root} style={isDarkMode ? { background: \"#000\", color: \"#ddd\" } : null}>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.appbar} style={isDarkMode ? { background: \"#333\", color: \"#fff\" } : null}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              edge=\"start\"\n              onClick={handleDrawerToggle}\n              className={classes.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <Typography variant=\"h5\" color=\"secondary\" className={classes.title} noWrap>\n              <Link to=\"/\">Notes</Link>\n            </Typography>\n            {!user ? (\n              <div className={classes.yo}>\n                <Link to=\"/login\">\n                  <Button color=\"secondary\" className={classes.login}>\n                    Login\n                  </Button>\n                </Link>\n                <Link to=\"/register/user\">\n                  <Button variant=\"contained\" color=\"secondary\">\n                    Register\n                  </Button>\n                </Link>\n              </div>\n            ) : (\n              <>\n                <Typography className={classes.date}>{user.username}</Typography>\n                <Link to=\"/profile\">\n                  <Avatar src={user.image} className={classes.avatar}>\n                    {!user.image ? user.username[0].toUpperCase() : \"\"}\n                  </Avatar>\n                </Link>\n              </>\n            )}\n            {/* <Typography className={classes.date}>{format(new Date(), \"E',' do MMM Y\")}</Typography> */}\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n\n      {/* Side Bar */}\n      <Navbar mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} handleDrawerToggle={handleDrawerToggle} />\n\n      <div className={classes.page}>\n        <div className={classes.toolbar}></div>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, TextField, Button, Typography } from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport useStyles from \"../styles/auth\";\nimport { AuthContext } from \"../../context/AuthContextProvider\";\n\nconst Login = ({ history }) => {\n  const { isDarkMode, dispatch } = useContext(AuthContext);\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const { data } = await axios.post(\"auth/login\", { email, password }, config);\n      dispatch({ type: \"SET_USER\", payload: data });\n      history.push(\"/\");\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <>\n      <Container className={classes.con} style={isDarkMode ? { background: \"#9b0b3b\" } : null}>\n        <div className=\"form-con1\">\n          <div className=\"form-icon\" style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}>\n            <LockOpenIcon color=\"secondary\" fontSize=\"large\" />\n          </div>\n          <div\n            className=\"form-con\"\n            style={isDarkMode ? { background: \"#333\", color: \"#ddd\" } : { color: \"#000\" }}\n          >\n            <Typography variant=\"h6\" color=\"secondary\" className={classes.loginH}>\n              LOGIN TO YOUR ACCOUNT\n            </Typography>\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n              <TextField\n                onChange={(e) => setEmail(e.target.value)}\n                label=\"Email\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={email}\n                size=\"small\"\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n              />\n              <TextField\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                label=\"Password\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={password}\n                size=\"small\"\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n              />\n\n              {error && <span className=\"error-msg\">{error}</span>}\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth\n                size=\"large\"\n                className={classes.btn}\n              >\n                <Typography className={classes.btnText}>LOGIN</Typography>\n              </Button>\n              <p>\n                <Link to=\"/register/user\">Don't have an account? Register</Link>\n              </p>\n              <p>\n                <Link to=\"/forgotpassword\">Forgot Password?</Link>\n              </p>\n            </form>\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Container, TextField, Button, Typography } from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport green from \"@material-ui/core/colors/green\";\nimport useStyles from \"../styles/auth\";\nimport { AuthContext } from \"../../context/AuthContextProvider\";\n\nconst VerifyEmail = () => {\n  const { isDarkMode } = useContext(AuthContext);\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [data, setData] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const { data } = await axios.post(\"/auth/verification\", { email }, config);\n      setData(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <>\n      <Container className={classes.con} style={isDarkMode ? { background: \"#9b0b3b\" } : null}>\n        <div className=\"form-con1\">\n          <div className=\"form-icon\" style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}>\n            <LockOpenIcon color=\"secondary\" fontSize=\"large\" />\n          </div>\n          <div\n            className=\"form-con\"\n            style={isDarkMode ? { background: \"#333\", color: \"#ddd\" } : { color: \"#000\" }}\n          >\n            <Typography variant=\"h6\" color=\"secondary\" className={classes.loginH}>\n              REGISTER AN ACCOUNT\n            </Typography>\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} className={data ? \"div-clear\" : \"\"}>\n              <TextField\n                onChange={(e) => setEmail(e.target.value)}\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                label=\"Email\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={email}\n                size=\"small\"\n              />\n              {error && <span className=\"error-msg\">{error}</span>}\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth\n                size=\"large\"\n                className={classes.btn}\n              >\n                <Typography className={classes.btnText}>VERIFY EMAIL</Typography>\n              </Button>\n            </form>\n            {data && (\n              <>\n                <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\n                <h4>Email was sent successfully.</h4>\n                <h4>Please complete your Registration via the Link we sent to your Email address.</h4>\n                <h4>The Link will expire after 24hrs and this Email address can't be used again!</h4>\n              </>\n            )}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default VerifyEmail;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, TextField, Button, Typography } from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport green from \"@material-ui/core/colors/green\";\nimport useStyles from \"../styles/auth\";\nimport { AuthContext } from \"../../context/AuthContextProvider\";\n\nconst Register = ({ history, match }) => {\n  const { isDarkMode, dispatch } = useContext(AuthContext);\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const source = axios.CancelToken.source();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      const { data } = await axios.post(\n        `/auth/register/${match.params.verifyToken}`,\n        { username, email, password },\n        config,\n        { cancelToken: source.token }\n      );\n      dispatch({ type: \"SET_USER\", payload: data });\n      setUser(data);\n      setTimeout(() => {\n        history.push(\"/\");\n      }, 5000);\n    } catch (error) {\n      if (!axios.isCancel(error)) {\n        setError(\"Error\");\n      }\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      source.cancel();\n    };\n  });\n\n  return (\n    <>\n      <Container className={classes.con} style={isDarkMode ? { background: \"#9b0b3b\" } : null}>\n        <div className=\"form-con1\">\n          <div className=\"form-icon\" style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}>\n            <LockOpenIcon color=\"secondary\" fontSize=\"large\" />\n          </div>\n          <div\n            className=\"form-con\"\n            style={isDarkMode ? { background: \"#333\", color: \"#ddd\" } : { color: \"#000\" }}\n          >\n            <Typography variant=\"h6\" color=\"secondary\" className={classes.loginH}>\n              REGISTER AN ACCOUNT\n            </Typography>\n            <form noValidate autoComplete=\"off\" onSubmit={handleSubmit} className={user ? \"div-clear\" : \"\"}>\n              <TextField\n                onChange={(e) => setUsername(e.target.value)}\n                label=\"Username\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={username}\n                size=\"small\"\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n              />\n              <TextField\n                onChange={(e) => setEmail(e.target.value)}\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                label=\"Email\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={email}\n                size=\"small\"\n              />\n              <TextField\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                label=\"Password\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={password}\n                size=\"small\"\n              />\n              <TextField\n                type=\"password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                label=\"Confirm Password\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={confirmPassword}\n                size=\"small\"\n              />\n\n              {error && <span className=\"error-msg\">{error}</span>}\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth\n                size=\"large\"\n                className={classes.btn}\n              >\n                <Typography className={classes.btnText}>REGISTER</Typography>\n              </Button>\n              <p>\n                <Link to=\"/login\">Already have an account? Login</Link>\n              </p>\n            </form>\n            {user && (\n              <>\n                <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\n                <h3>Registered successfully!</h3>\n                <h4>Please wait while we redirect you to the Home page.</h4>\n              </>\n            )}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Container, TextField, Button, Typography } from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport green from \"@material-ui/core/colors/green\";\nimport useStyles from \"../styles/auth\";\nimport { AuthContext } from \"../../context/AuthContextProvider\";\n\nconst ForgotPassword = () => {\n  const { isDarkMode } = useContext(AuthContext);\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const { data } = await axios.post(\"/auth/forgotpassword\", { email }, config);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <>\n      <Container className={classes.con} style={isDarkMode ? { background: \"#9b0b3b\" } : null}>\n        <div className=\"form-con1\">\n          <div className=\"form-icon\" style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}>\n            <LockOpenIcon color=\"secondary\" fontSize=\"large\" />\n          </div>\n          <div\n            className=\"form-con\"\n            style={isDarkMode ? { background: \"#333\", color: \"#ddd\" } : { color: \"#000\" }}\n          >\n            <Typography variant=\"h6\" color=\"secondary\" className={classes.loginH}>\n              FORGOT PASSWORD\n            </Typography>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              className={success ? \"div-clear\" : \"\"}\n            >\n              <TextField\n                onChange={(e) => setEmail(e.target.value)}\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                label=\"Email\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={email}\n                size=\"small\"\n              />\n\n              {error && <span className=\"error-msg\">{error}</span>}\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth\n                size=\"large\"\n                className={classes.btn}\n              >\n                <Typography className={classes.btnText}>VERIFY EMAIL</Typography>\n              </Button>\n            </form>\n            {success && (\n              <>\n                <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\n                <h3>Email was sent successfully!</h3>\n                <h4>Please check your Email to reset your password.</h4>\n              </>\n            )}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Container, TextField, Button, Typography } from \"@material-ui/core\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport green from \"@material-ui/core/colors/green\";\nimport useStyles from \"../styles/auth\";\nimport { AuthContext } from \"../../context/AuthContextProvider\";\n\nconst ResetPassword = ({ match }) => {\n  const { isDarkMode } = useContext(AuthContext);\n  const classes = useStyles();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Passwords do not match\");\n    }\n    if (password.length < 6 || confirmPassword.length < 6) {\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Password must contain at least 6 characters\");\n    }\n    try {\n      const { data } = await axios.patch(\n        `/auth/resetpassword/${match.params.resetToken}`,\n        { password },\n        config\n      );\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n\n  return (\n    <>\n      <Container className={classes.con} style={isDarkMode ? { background: \"#9b0b3b\" } : null}>\n        <div className=\"form-con1\">\n          <div className=\"form-icon\" style={isDarkMode ? { background: \"rgba(0,0,0,0.9)\" } : null}>\n            <LockOpenIcon color=\"secondary\" fontSize=\"large\" />\n          </div>\n          <div\n            className=\"form-con\"\n            style={isDarkMode ? { background: \"#333\", color: \"#ddd\" } : { color: \"#000\" }}\n          >\n            <Typography variant=\"h6\" color=\"secondary\" className={classes.loginH}>\n              RESET PASSWORD\n            </Typography>\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={handleSubmit}\n              className={success ? \"div-clear\" : \"\"}\n            >\n              <TextField\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n                label=\"Password\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={password}\n                size=\"small\"\n              />\n              <TextField\n                type=\"password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                label=\"Confirm Password\"\n                variant=\"outlined\"\n                InputLabelProps={isDarkMode ? { className: classes.textLab } : null}\n                fullWidth\n                value={confirmPassword}\n                size=\"small\"\n                className={isDarkMode ? classes.root : classes.field}\n                InputProps={isDarkMode ? { style: { color: \"#fff\" } } : null}\n              />\n\n              {error && <span className=\"error-msg\">{error}</span>}\n\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth\n                size=\"large\"\n                className={classes.btn}\n              >\n                <Typography className={classes.btnText}>RESET</Typography>\n              </Button>\n            </form>\n            {success && (\n              <>\n                <CheckCircleIcon fontSize=\"large\" style={{ color: green[500] }} />\n                <h3>Password reset was successful!</h3>\n                <h4>Please click the button below to login.</h4>\n                <Link to=\"/login\">\n                  <Button variant=\"contained\" color=\"secondary\">\n                    Login\n                  </Button>\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default ResetPassword;\n","import { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport Notes from \"./components/Notes\";\nimport NoteDetails from \"./components/NoteDetails\";\nimport Create from \"./components/Create\";\nimport Profile from \"./components/Profile\";\nimport Layout from \"./components/Layout\";\nimport Login from \"./components/auth/Login\";\nimport VerifyEmail from \"./components/auth/VerifyEmail\";\nimport Register from \"./components/auth/Register\";\nimport ForgotPassword from \"./components/auth/ForgotPassword\";\nimport ResetPassword from \"./components/auth/ResetPassword\";\nimport { AuthContext } from \"./context/AuthContextProvider\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1da1f2\",\n    },\n    secondary: {\n      main: \"#e91e63\",\n    },\n    tet: {\n      main: \"#fff\",\n    },\n  },\n  typography: {\n    fontFamily: \"Quicksand\",\n    fontWeightLight: 400,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n    fontWeightBold: 700,\n  },\n});\n\nfunction App() {\n  const { user } = useContext(AuthContext);\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" render={() => (!user ? <Redirect to=\"/login\" /> : <Notes />)} />\n            <Route path=\"/create\" component={Create} />\n            <Route path=\"/notes/:id\" component={NoteDetails} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/verification\" component={VerifyEmail} />\n            <Route path=\"/register/:verifyToken\" component={Register} />\n            <Route path=\"/forgotpassword\" component={ForgotPassword} />\n            <Route path=\"/resetpassword/:resetToken\" component={ResetPassword} />\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport AuthContextProvider from \"./context/AuthContextProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}